[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Gracie Zheng",
    "section": "",
    "text": "Enrolled in the MS Statistics program at the Zicklin School of Business, I am graduating in May 2026.\nI currently work at my family restaurant alongside my mom.\nI am ambidextrous; I use chopsticks on my right hand and do everything else with my left hand.\nI am really good at Tetris."
  },
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "mp01",
    "section": "",
    "text": "In this mini project, I will be analyzing the fiscal characteristics of public transit systems in the United States through summary statistics and coming to the conclusion of which is the most efficient transit system.\nGiven the data, I am downloading the files and cleaning and joining the fares and expenses tables.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       \n           `Agency Name`,  \n           `Mode`) |&gt;      \n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency Name'. You can override\nusing the `.groups` argument.\n\n# expenses file \n\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nRows: 3744 Columns: 29\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Agency, City, State, NTD ID, Organization Type, Reporter Type, UZA...\ndbl  (2): Report Year, UACE Code\nnum (10): Primary UZA Population, Agency VOMS, Mode VOMS, Vehicle Operations...\nlgl  (7): Vehicle Operations Questionable, Vehicle Maintenance Questionable,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n`summarise()` has grouped output by 'NTD ID'. You can override using the `.groups` argument.\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\nThe third file is the monthly transit numbers.\n\nlibrary(tidyverse)\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'UZA Name', 'Mode', '3\nMode'. You can override using the `.groups` argument.\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\nJoining with `by = join_by(`NTD ID`, Agency, `UZA Name`, Mode, `3 Mode`,\nmonth)`\n\n\n\n\n\n\nif(!require(\"DT\")) install.packages(\"DT\")\n\nLoading required package: DT\n\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\n\n\n\n\nFirst, I am renaming the “UZA Name” column to “metro_area”.\n\nUSAGE &lt;- USAGE |&gt;\n       rename(metro_area = `UZA Name`)\n\n\n\n\n\nunique_modes &lt;- USAGE |&gt; \n  distinct(Mode)\n\nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode=case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))\n\nThen I reload the table with this code to make it look neater:\n\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n \ndatatable(\n    sample_n(USAGE, 1000) |&gt;\n      mutate(month = as.character(month)) |&gt;\n      select(-`3 Mode`) |&gt;\n      rename(\n        `Metro Area` = metro_area,\n        `Unlinked Passenger Trips` = UPT,\n        `Vehicle Revenue Miles` = VRM\n      )\n)\n\n\n\n\n\n\n\n\n\nWhat transit agency had the most total VRM in our data set?\n\n\n  most_vrm_agency &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(total_vrm = sum(VRM, na.rm = TRUE)) |&gt;\n  arrange(desc(total_vrm)) |&gt;\n  slice(1)\nprint (most_vrm_agency)\n\n# A tibble: 1 × 2\n  Agency                      total_vrm\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n\nThe MTA New York City Transit had the most total VRM at 10832855350 miles.\n\nWhat transit mode had the most total VRM in our data set?\n\n\n  most_vrm_mode &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(total_vrm = sum(VRM, na.rm = TRUE)) |&gt;\n  arrange(desc(total_vrm)) |&gt;\n  slice(1)\nprint (most_vrm_mode)\n\n# A tibble: 1 × 2\n  Mode    total_vrm\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n\nBus mode had the most total VRM at 49444494088.\n\nHow many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n\n\nnyc_subway_trips_may_2024 &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\", \n         Agency == \"MTA New York City Transit\",\n         month == \"2024-05-01\")\nprint(nyc_subway_trips_may_2024)\n\n# A tibble: 1 × 8\n  `NTD ID` Agency             metro_area Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;              &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1    20008 MTA New York City… New York-… Heav… Rail     2024-05-01 1.80e8 3.00e7\n\n\n\nHow much did NYC subway ridership fall between April 2019 and April 2020?\n\n\napril_fall &lt;- USAGE |&gt; \n  filter(\n    Mode == \"Heavy Rail\",    # Focus on subway (Heavy Rail)\n    Agency == \"MTA New York City Transit\", \n    month %in% c(\"2019-04-01\", \"2020-04-01\")  # Only April 2019 and April 2020\n  ) |&gt; \n  group_by(month) |&gt;       # Group by month\n  summarize(total_UPT = sum(UPT, na.rm = TRUE)) |&gt;   # Summarize total UPT for each month\n  spread(month, total_UPT) |&gt;   # Spread the month column to calculate difference\n  mutate(april_fall = `2019-04-01` - `2020-04-01`)  # Calculate ridership fall\nprint(april_fall)\n\n# A tibble: 1 × 3\n  `2019-04-01` `2020-04-01` april_fall\n         &lt;dbl&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1    232223929     20254269  211969660\n\n\n\n\n\n\nWhich 3 Metro Areas have the lowest amount of Vehicle Revenue Miles?\n\n\nleast3_vrm_metro &lt;- USAGE |&gt; \n  group_by(metro_area) |&gt; \n  summarize(total_VRM = sum(VRM, na.rm = TRUE)) |&gt; \n  arrange(total_VRM) |&gt; \n  slice(3)\nprint(least3_vrm_metro)\n\n# A tibble: 1 × 2\n  metro_area        total_VRM\n  &lt;chr&gt;                 &lt;dbl&gt;\n1 Texarkana, TX--AR    262979\n\n\n\nWhich Metro Area Had the Highest Vehicle Revenue Miles (VRM) per Trip?\n\nThis question is aimed to find the metro area that covers the most distance per rider.\n\nvrm_per_trip_metro &lt;- USAGE |&gt; \n  group_by(metro_area) |&gt; \n  summarize(total_VRM = sum(VRM, na.rm = TRUE), \n            total_UPT = sum(UPT, na.rm = TRUE)) |&gt; \n  mutate(vrm_per_trip = total_VRM / total_UPT) |&gt; \n  arrange(desc(vrm_per_trip)) |&gt; \n  slice(1)\nprint(vrm_per_trip_metro)\n\n# A tibble: 1 × 4\n  metro_area     total_VRM total_UPT vrm_per_trip\n  &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;        &lt;dbl&gt;\n1 Morristown, TN   4386584    261196         16.8\n\n\n\nWhich Agency is busiest in December?\n\n\nbusiest_agency_december &lt;- USAGE |&gt; \n  filter(format(as.Date(month), \"%m\") == \"12\") |&gt;  # Filter for December\n  group_by(Agency) |&gt; \n  summarize(total_UPT = sum(UPT, na.rm = TRUE)) |&gt; \n  arrange(desc(total_UPT)) |&gt; \n  slice(1)\nprint(busiest_agency_december)\n\n# A tibble: 1 × 2\n  Agency                     total_UPT\n  &lt;chr&gt;                          &lt;dbl&gt;\n1 MTA New York City Transit 5630067938\n\n\nI am not sure what I was expecting, but it was not New York. I had a belief that people would go back home to see their family; I forgot about tourism and that the ridership is NYC is extremely high at all times of the year.\n\n\n\n\nusage_2022_annual &lt;- USAGE |&gt;\nfilter(year(month) == \"2022\") |&gt;\n  group_by(\n    `NTD ID`,\n    Agency,\n    metro_area,\n    Mode) |&gt;\n  summarise(\n    Total_VRM = sum(VRM, na.rm = TRUE),\n    Total_UPT = sum(UPT, na.rm = TRUE),\n    .groups = 'drop'\n  ) |&gt;\n  ungroup()\nprint(usage_2022_annual)\n\n# A tibble: 1,141 × 6\n   `NTD ID` Agency                          metro_area Mode  Total_VRM Total_UPT\n      &lt;int&gt; &lt;chr&gt;                           &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1        1 King County                     Seattle--… Bus    61632644  53983641\n 2        1 King County                     Seattle--… Dema…  12860448    663009\n 3        1 King County                     Seattle--… Ferr…     51236    400407\n 4        1 King County                     Seattle--… Stre…    180369   1117605\n 5        1 King County                     Seattle--… Trol…   2635705   9575043\n 6        1 King County                     Seattle--… Vanp…   4413910    702709\n 7        2 Spokane Transit Authority       Spokane, … Bus     6485325   6595319\n 8        2 Spokane Transit Authority       Spokane, … Dema…   4037502    310316\n 9        2 Spokane Transit Authority       Spokane, … Vanp…    905990     90576\n10        3 Pierce County Transportation B… Seattle--… Bus     4227441   4950296\n# ℹ 1,131 more rows\n\n\nRecall the FINANCIALS table we created in the beginning I am also renaming the modes for financials so it shows in the table.\n\nprint(FINANCIALS)\n\n# A tibble: 1,173 × 5\n   `NTD ID` `Agency Name`                           Mode  `Total Fares` Expenses\n      &lt;dbl&gt; &lt;chr&gt;                                   &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;\n 1        1 King County Department of Metro Transit CB          5216912   0     \n 2        1 King County Department of Metro Transit DR           832327   6.05e7\n 3        1 King County Department of Metro Transit FB          1715265   8.90e6\n 4        1 King County Department of Metro Transit LR         29386480   0     \n 5        1 King County Department of Metro Transit MB         56846337   6.72e8\n 6        1 King County Department of Metro Transit SR           588495   1.25e7\n 7        1 King County Department of Metro Transit TB         10123486   8.42e7\n 8        1 King County Department of Metro Transit VP          5484481   8.91e6\n 9        2 Spokane Transit Authority               DR           531284   1.80e7\n10        2 Spokane Transit Authority               MB          6135110   7.53e7\n# ℹ 1,163 more rows\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"FB\" ~ \"Ferryboat\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"SR\" ~ \"Streetcar Rail\",\n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"RB\" ~ \"Bus Rapid Transit\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MG\" ~ \"Monorail and Automated Guideway modes\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramways\",\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"\n  ))\n\nFollowing this code, the two tables are merged:\n\nUSAGE_AND_FINANCIALS &lt;- left_join(usage_2022_annual, \n           FINANCIALS, \n           join_by(`NTD ID`, Mode)) |&gt;\n    drop_na()\n\nLet’s show the first 1,000!\n\nsample_n(USAGE_AND_FINANCIALS, 1000) \n\n# A tibble: 1,000 × 9\n   `NTD ID` Agency            metro_area Mode  Total_VRM Total_UPT `Agency Name`\n      &lt;dbl&gt; &lt;chr&gt;             &lt;chr&gt;      &lt;chr&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;        \n 1    90196 County of Placer  Sacrament… Comm…      3944      1054 County of Pl…\n 2       44 Skagit Transit    Mount Ver… Dema…    374842     53400 Skagit Trans…\n 3    40035 Central Florida … Orlando, … Dema…   7557232    585706 Central Flor…\n 4    40108 Research Triangl… Durham, NC Dema…    416124     35595 Research Tri…\n 5    20075 Port Authority T… Philadelp… Heav…   4868978   4870310 Port Authori…\n 6    50035 Central County T… Kalamazoo… Dema…    877697    114323 Central Coun…\n 7    90234 Marin County Tra… San Franc… Dema…    421668     49975 Marin County…\n 8    50166 Clermont County,… Cincinnat… Bus      119799     11964 Board of  Cl…\n 9    30202 South Central Tr… Lancaster… Dema…   4415050    313723 South Centra…\n10    50045 Gary Public Tran… Chicago, … Bus      788671    371256 Gary Public …\n# ℹ 990 more rows\n# ℹ 2 more variables: `Total Fares` &lt;dbl&gt;, Expenses &lt;dbl&gt;\n\n\n\n\n\nWhich transit system (agency and mode) had the most UPT in 2022?\n\nmost_upt_2022 &lt;- USAGE_AND_FINANCIALS |&gt;\n     group_by(Agency, Mode) |&gt;\n     filter(sum(Total_UPT, na.rm = TRUE) &gt;= 400000) |&gt;\n     summarise(UPT = sum(Total_UPT),  .groups = 'drop') |&gt;\n     arrange(desc(UPT)) |&gt;\n     slice(1)\nprint(most_upt_2022)\n\n# A tibble: 1 × 3\n  Agency                    Mode              UPT\n  &lt;chr&gt;                     &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit Heavy Rail 1793073801\n\n\nThe subway of the MTA New York City Transit system had the most UPT in 2022 at 1,793,073,801.\nWhich transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\n\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(farebox_recovery = `Total Fares` / Expenses) |&gt;\n  arrange(desc(farebox_recovery)) |&gt;\n  select(-`Agency Name`, -`Total_VRM`, -`Total_UPT`) |&gt; #to be able to see the desired column in my code\n  slice(1)\n\nprint(highest_farebox_recovery)\n\n# A tibble: 1 × 7\n  `NTD ID` Agency       metro_area Mode  `Total Fares` Expenses farebox_recovery\n     &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;            &lt;dbl&gt;\n1    40191 Transit Aut… Elizabeth… Vanp…         97300    40801             2.38\n\n\nIn 2022, vanpooling of the Transit Authority of Central Kentucky had the highest farebox recovery at 2.38.\nWhich transit system (agency and mode) has the lowest expenses per UPT?\n\nlowest_expenses_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(expenses_per_upt = Expenses / Total_UPT) |&gt;\n  arrange(expenses_per_upt) |&gt;\n  select(-`Agency Name`, -`Total_VRM`, -`Total_UPT`) |&gt; #to be able to see the desired column in my code\n  slice(1)\n\nprint(lowest_expenses_per_upt)\n\n# A tibble: 1 × 7\n  `NTD ID` Agency       metro_area Mode  `Total Fares` Expenses expenses_per_upt\n     &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;            &lt;dbl&gt;\n1    40147 North Carol… Raleigh, … Bus               0  2727412             1.18\n\n\nThe transit system with the lowest expenses per UPT is the North Carolina State University bus with expenses per UPT at $1.18.\nWhich transit system (agency and mode) has the highest total fares per UPT?\n\nhighest_fares_per_upt &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(fares_per_upt = `Total Fares` / Total_UPT) |&gt;\n  arrange(desc(fares_per_upt)) |&gt;\n  select(-`Agency Name`, -`Total_VRM`, -`Total_UPT`) |&gt; #to be able to see the desired column in my code\n  slice(1)\n\nprint(highest_fares_per_upt)\n\n# A tibble: 1 × 7\n  `NTD ID` Agency          metro_area Mode  `Total Fares` Expenses fares_per_upt\n     &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;      &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;         &lt;dbl&gt;\n1    30011 Altoona Metro … Altoona, … Dema…         17163    90550          660.\n\n\nIn 2022, the highest total fares per UPT is at the Altoona Metro Transit by Demand Response.\nWhich transit system (agency and mode) has the lowest expenses per VRM?\n\nlowest_expenses_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(expenses_per_vrm = Expenses / Total_VRM) |&gt;\n  arrange(expenses_per_vrm) |&gt;\n  select(-`Agency Name`, -`Total_VRM`, -`Total_UPT`) |&gt; #to be able to see the desired column in my code\n  slice(1)\n\nprint(lowest_expenses_per_vrm)\n\n# A tibble: 1 × 7\n  `NTD ID` Agency       metro_area Mode  `Total Fares` Expenses expenses_per_vrm\n     &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;            &lt;dbl&gt;\n1    66339 New Mexico … Las Cruce… Vanp…        757574   588830            0.337\n\n\nNew Mexico Department of Transportation’s vanpooling system has the lowest expenses per VRM at 0.337.\nWhich transit system (agency and mode) has the highest total fares per VRM?\n\nhighest_fares_per_vrm &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(fares_per_vrm = `Total Fares` / Total_VRM) |&gt;\n  arrange(desc(fares_per_vrm)) |&gt;\n  select(-`Agency Name`, -`Total_VRM`, -`Total_UPT`) |&gt; #to be able to see the desired column in my code\n  slice(1)\n\nprint(highest_fares_per_vrm)\n\n# A tibble: 1 × 7\n  `NTD ID` Agency          metro_area Mode  `Total Fares` Expenses fares_per_vrm\n     &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;      &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;         &lt;dbl&gt;\n1    50521 Chicago Water … Chicago, … Ferr…        142473   211296          237.\n\n\nAt $237, the Chicago Water Taxi’s ferry has the highest total fares per VRM.\n\n\n\nThe most efficient transit system would be the MTA New York Transit System as it moves the most amount of passengers from one destination to another. I am viewing the term “efficiency” as being able to serve the most amount of people with its given size."
  },
  {
    "objectID": "mp01.html#conclusion",
    "href": "mp01.html#conclusion",
    "title": "mp01",
    "section": "",
    "text": "The most efficient transit system would be the MTA New York Transit System as it moves the most amount of passengers from one destination to another. I am viewing the term “efficiency” as being able to serve the most amount of people with its given size."
  }
]